                      | # create by: Zizhao Zhang
                      | # student ID: 2014013430
                      | # Execution begis at address 0
  0x000:              |             .pos 0
  0x000: 30f400010000 | init:       irmovl  Stack, %esp
  0x006: 30f500010000 |             irmovl  Stack, %ebp
  0x00c: 802c000000   |             call Main
  0x011: 00           |             halt
                      | 
                      | # Sample linked list 
  0x014:              | .align 4 
  0x014:              | ele1: 
  0x014: 0a000000     |         .long 0x00a 
  0x018: 1c000000     |         .long ele2 
  0x01c:              | ele2: 
  0x01c: b0000000     |         .long 0x0b0 
  0x020: 24000000     |         .long ele3 
  0x024:              | ele3: 
  0x024: 000c0000     |         .long 0xc00 
  0x028: 00000000     |         .long 0
                      | 
  0x02c: a05f         | Main:		pushl   %ebp
  0x02e: 2045         |             rrmovl  %esp, %ebp
  0x030: 30f114000000 |             irmovl  ele1, %ecx
  0x036: a01f         |             pushl   %ecx
  0x038: 8042000000   |             call    Sum_list
  0x03d: 2054         |             rrmovl  %ebp, %esp
  0x03f: b05f         |             popl    %ebp
  0x041: 90           |             ret
                      | 
                      | # int sum_list(list_ptr ls)
  0x042: a05f         | Sum_list:	pushl 	%ebp
  0x044: 2045         | 			rrmovl 	%esp, %ebp
  0x046: 501508000000 | 			mrmovl 	8(%ebp), %ecx 		# ecx = ls
  0x04c: 6300         | 			xorl 	%eax, %eax			# eax = sum = 0
  0x04e: 6001         | 			addl	%eax, %ecx
  0x050: 736c000000   | 			je 		End
  0x055: 503100000000 | Loop:		mrmovl 	(%ecx), %ebx		# ebx = *ls = ls->val
  0x05b: 506104000000 | 			mrmovl	4(%ecx), %esi		# esi = ls->next
  0x061: 6030         | 			addl	%ebx, %eax
  0x063: 2061         | 			rrmovl 	%esi, %ecx
  0x065: 6211         |     		andl    %ecx, %ecx
  0x067: 7455000000   | 			jne		Loop
  0x06c: 2054         | End:		rrmovl	%ebp, %esp
  0x06e: b05f         | 			popl 	%ebp
  0x070: 90           | 			ret
                      | 
  0x100:              |             .pos 0x100
  0x100:              | Stack:
